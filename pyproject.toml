[tool.poetry]
name = "backend-academy-2024-python-template"
version = "0.1.0"
description = ""
package-mode = false
authors = ["n.beskodarov <n.beskodarov@tinkoff.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
telethon = "^1.38.1"
pydantic-settings = "^2.7.1"
fastapi = "^0.115.8"
uvicorn = "^0.34.0"
sqlalchemy = "^2.0.39"
psycopg = "^3.2.6"
psycopg-pool = "^3.2.6"

[tool.poetry.group.dev.dependencies]
black = "^24.8.0"
isort = "^5.13.2"
ruff = "^0.6.1"
mypy = "^1.14.1"
pytest = "*"
pytest-cov = "*"
pytest-deadfixtures = "*"
pytest-mock = "*"
pytest-repeat = "*"
pytest-asyncio = "*"
httpx = "^0.28.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
fix = true
unsafe-fixes = true
line-length = 100
lint.select = ["ALL"]
lint.ignore = [
    "D1",
    "D203",
    "D205",
    "D213",
    "FA102",
    "ANN101",
    "ANN102",
    "TRY003",
    "EM",
    "FBT",
    "FIX",
    "TD",
    "S104",
    "FA",
    "PGH003",
    "DTZ007",
    "D401",
    "RUF001",
    "B008",
    "SIM102",
    "D404",
    "S101",
    "RET505",
    "PLR0911",
    "PLR0915",
    "EXE002", 
]

[tool.ruff.lint.isort]
no-lines-before = ["standard-library", "local-folder"]
known-third-party = []
known-local-folder = ["whole_app"]

[tool.ruff.lint.pylint]
max-args = 8
max-branches = 8
max-bool-expr = 5
max-public-methods = 5
max-statements = 40

[tool.mypy]
disable_error_code = ["import-untyped", "unused-ignore", "method-assign"]
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_no_return = true
implicit_reexport = false
strict_equality = true


[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false
